upstream wordpress_backend {
    server wordpress1:80;  # Ensure the containers are accessible via these names
    server wordpress2:80;  # Ensure both containers are in the same Docker network
}

server {
    listen 80;
    server_name localhost;  # Replace with your actual domain or IP if needed

    # Define the root directory for serving static files (optional for error pages)
    root /var/www/html;
    index index.php index.html index.htm;

    # Load balancing to WordPress instances (Round-robin)
    location / {
        proxy_pass http://wordpress_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle PHP requests and forward them to PHP-FPM
    location ~ \.php$ {
        fastcgi_pass php-fpm:9000;  # Forward to the PHP-FPM container on port 9000
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $document_root;
        include fastcgi_params;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files directly (optional for performance)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot)$ {
        expires max;
        log_not_found off;
    }

    # Error handling for 404 pages
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }
}
